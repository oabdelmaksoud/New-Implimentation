{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelmaksoud/Documents/GitHub/New Implimentation/dashboard/src/components/HealthDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './HealthDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthDashboard = () => {\n  _s();\n  const [healthData, setHealthData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchHealthData = async () => {\n      try {\n        // TODO: Replace with actual MCP server health endpoint\n        const response = await fetch('/api/health');\n        if (!response.ok) {\n          throw new Error('Failed to fetch health data');\n        }\n        const data = await response.json();\n        setHealthData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHealthData();\n    const interval = setInterval(fetchHealthData, 30000); // Refresh every 30s\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-loading\",\n    children: \"Loading health data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"System Health Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"health-grid\",\n      children: healthData && Object.entries(healthData).map(([server, status]) => {\n        var _status$metrics;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `health-card ${status.status}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: server\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", status.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uptime: \", ((_status$metrics = status.metrics) === null || _status$metrics === void 0 ? void 0 : _status$metrics.uptime) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Check: \", new Date(status.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, server, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthDashboard, \"zh6C9ED7CWN+CBSA7mKnz6P2zJs=\");\n_c = HealthDashboard;\nexport default HealthDashboard;\nvar _c;\n$RefreshReg$(_c, \"HealthDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HealthDashboard","_s","healthData","setHealthData","loading","setLoading","error","setError","fetchHealthData","response","fetch","ok","Error","data","json","err","message","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","server","status","_status$metrics","metrics","uptime","Date","timestamp","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/omarabdelmaksoud/Documents/GitHub/New Implimentation/dashboard/src/components/HealthDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './HealthDashboard.css';\n\nconst HealthDashboard = () => {\n  const [healthData, setHealthData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchHealthData = async () => {\n      try {\n        // TODO: Replace with actual MCP server health endpoint\n        const response = await fetch('/api/health');\n        if (!response.ok) {\n          throw new Error('Failed to fetch health data');\n        }\n        const data = await response.json();\n        setHealthData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchHealthData();\n    const interval = setInterval(fetchHealthData, 30000); // Refresh every 30s\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) return <div className=\"health-loading\">Loading health data...</div>;\n  if (error) return <div className=\"health-error\">Error: {error}</div>;\n\n  return (\n    <div className=\"health-dashboard\">\n      <h2>System Health Overview</h2>\n      <div className=\"health-grid\">\n        {healthData && Object.entries(healthData).map(([server, status]) => (\n          <div key={server} className={`health-card ${status.status}`}>\n            <h3>{server}</h3>\n            <p>Status: {status.status}</p>\n            <p>Uptime: {status.metrics?.uptime || 'N/A'}</p>\n            <p>Last Check: {new Date(status.timestamp).toLocaleTimeString()}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HealthDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}